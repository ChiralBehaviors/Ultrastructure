/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 08 20:07:14 GMT 2016
 */

package com.chiralbehaviors.CoRE.utils;

import static org.evosuite.runtime.EvoAssertions.assertThrownBy;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.sql.SQLException;
import java.util.MissingFormatArgumentException;
import java.util.UnknownFormatConversionException;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.postgresql.util.PSQLException;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CoreDbConfiguration_ESTest
        extends CoreDbConfiguration_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        coreDbConfiguration0.coreServer = "qx|:";
        String string0 = coreDbConfiguration0.toString();
        assertEquals("CoreDbConfiguration [contexts=local, coreDb=core, corePassword=:: undefined :: , corePort=0, coreServer=qx|:, coreUsername=null]",
                     string0);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        coreDbConfiguration0.corePassword = "";
        // Undeclared exception!
        try {
            coreDbConfiguration0.initializeFromEnvironment();
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // DATABASE_URL is not defined in the system environment
            //
            assertThrownBy("com.chiralbehaviors.CoRE.utils.CoreDbConfiguration",
                           e);
        }
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        coreDbConfiguration0.coreServer = "}B(nf-*id";
        // Undeclared exception!
        try {
            coreDbConfiguration0.getCoreConnection();
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // DATABASE_URL is not defined in the system environment
            //
            assertThrownBy("com.chiralbehaviors.CoRE.utils.CoreDbConfiguration",
                           e);
        }
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        coreDbConfiguration0.coreUsername = "q";
        // Undeclared exception!
        try {
            coreDbConfiguration0.initializeFromEnvironment();
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // DATABASE_URL is not defined in the system environment
            //
            assertThrownBy("com.chiralbehaviors.CoRE.utils.CoreDbConfiguration",
                           e);
        }
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        Future<?> future = executor.submit(new Runnable() {
            @Override
            public void run() {
                try {
                    CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
                    coreDbConfiguration0.coreServer = "qx|:";
                    coreDbConfiguration0.corePassword = "";
                    try {
                        coreDbConfiguration0.getCoreConnection();
                        fail("Expecting exception: PSQLException");

                    } catch (PSQLException e) {
                        //
                        // Something unusual has occurred to cause the driver to fail. Please report this exception.
                        //
                        assertThrownBy("org.postgresql.Driver", e);
                    }
                } catch (Throwable t) {
                    // Need to catch declared exceptions
                }
            }
        });
        future.get(4000, TimeUnit.MILLISECONDS);
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        CoreDbConfiguration.JDBC_URL = "";
        String string0 = coreDbConfiguration0.getCoreJdbcURL();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        CoreDbConfiguration.JDBC_URL = "%jj;97ATvw)UDwSM|";
        // Undeclared exception!
        try {
            coreDbConfiguration0.getCoreJdbcURL();
            fail("Expecting exception: UnknownFormatConversionException");

        } catch (UnknownFormatConversionException e) {
            //
            // Conversion = 'j'
            //
            assertThrownBy("java.util.Formatter$FormatSpecifier", e);
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        CoreDbConfiguration.JDBC_URL = "CoreDbConfiguration [contexts=%s, coreDb=%s, corePassword=%s, corePort=%s, coreServer=%s, coreUsername=%s]";
        // Undeclared exception!
        try {
            coreDbConfiguration0.getCoreJdbcURL();
            fail("Expecting exception: MissingFormatArgumentException");

        } catch (MissingFormatArgumentException e) {
            //
            // Format specifier '%s'
            //
            assertThrownBy("java.util.Formatter", e);
        }
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        CoreDbConfiguration.JDBC_URL = null;
        // Undeclared exception!
        try {
            coreDbConfiguration0.getCoreJdbcURL();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        coreDbConfiguration0.corePassword = "jdbc:postgresql://null:183/core";
        CoreDbConfiguration.JDBC_URL = "";
        CoreDbConfiguration.JDBC_URL = "3B=3WSv`LLpD)\"E<%";
        // Undeclared exception!
        try {
            coreDbConfiguration0.getCoreConnection();
            fail("Expecting exception: UnknownFormatConversionException");

        } catch (UnknownFormatConversionException e) {
            //
            // Conversion = '%'
            //
            assertThrownBy("java.util.Formatter", e);
        }
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        CoreDbConfiguration.JDBC_URL = "CoreDbConfiguration [contexts=%s, coreDb=%s, corePassword=%s, corePort=%s, coreServer=%s, coreUsername=%s]";
        coreDbConfiguration0.corePassword = "local";
        // Undeclared exception!
        try {
            coreDbConfiguration0.getCoreConnection();
            fail("Expecting exception: MissingFormatArgumentException");

        } catch (MissingFormatArgumentException e) {
            //
            // Format specifier '%s'
            //
            assertThrownBy("java.util.Formatter", e);
        }
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        CoreDbConfiguration.JDBC_URL = "";
        coreDbConfiguration0.corePassword = "";
        try {
            coreDbConfiguration0.getCoreConnection();
            fail("Expecting exception: SQLException");

        } catch (SQLException e) {
            //
            // No suitable driver found for 
            //
            assertThrownBy("java.sql.DriverManager", e);
        }
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        coreDbConfiguration0.corePassword = "]TIAOa ";
        CoreDbConfiguration.JDBC_URL = null;
        // Undeclared exception!
        try {
            coreDbConfiguration0.getCoreConnection();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        coreDbConfiguration0.corePassword = "local";
        String string0 = coreDbConfiguration0.toString();
        assertEquals("CoreDbConfiguration [contexts=local, coreDb=core, corePassword=**********, corePort=0, coreServer=null, coreUsername=null]",
                     string0);
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        CoreDbConfiguration coreDbConfiguration0 = new CoreDbConfiguration();
        String string0 = coreDbConfiguration0.getCoreJdbcURL();
        assertEquals("jdbc:postgresql://null:0/core", string0);
    }
}
