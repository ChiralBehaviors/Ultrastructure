workspace: "uri:http://ultrastructure.me/ontology/com.chiralbehaviors/uaas/single-page" 
           version: 1
           "UaaS SP" "A declarative single page application framework for Ultrastructure"
imports {
    "urn:uuid:00000000-0000-0004-0000-000000000003" as kernel {
    	IsA.Workspace
    }
}
attributes {
    relation = "Relation" "The name of a relation" text;
    route = "Route" "The named route" text;
    extract = "Extract" "The xpath extractions from data"  keyed: true text;
    query = "Query" "GraphQL query" text;
    title = "Title" "Page title" text;
    endpoint = "Endpoint" "URL endpoint" text;
	root = "Root" "Root page" text;
}
products {
    Page = "Page" "A single page in an application";
    Application = "Application" "A single page application";
    PageRoute = "PageRoute" "A routing from one page to another";
    facets {
        IsA.Application { endpoint root }
            constraints {
                n hasPage: IsA.Page { route }
            }
    	IsA.Page { query title }
    		constraints { 
    			one pageOf: IsA.Application
    			one frame: IsA.Workspace
                n create: IsA.PageRoute named by relationship { relation }
                n retrieve: IsA.PageRoute named by relationship{ relation }
                n update: IsA.PageRoute named by relationship { relation }
                n delete: IsA.PageRoute named by relationship { relation }
    		}
    	IsA.PageRoute { extract route }
    }
}
relationships {
    hasPage = "Has Page" "A has page B" | pageOf = "Page Of" "A is a page of B";
    hasRoute = "Has Route" "A has route B" | routeOf = "Route Of" "A is a route of B";
    frame = "A is framed by the workspace B" | frameOf = "A is the workspace frame of page B";
    create = "A creates an instance of the relation using route B" | createRouteOf = "A is a route used to create a new instance of a relation of page B";
    retrieve = "A retrieves the relation using route B" | retrieveRouteOf = "A is a route used to retrieve a relation of page B";
    update = "A updates relation using route B" | updateRouteOf = "A is a route used to update a relation of page B";
    delete = "A deletes relation using route B" | deleteRouteOf = "A is a route used to delete a relation of page B";
}
