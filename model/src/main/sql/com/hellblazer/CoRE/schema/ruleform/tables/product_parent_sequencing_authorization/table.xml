<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">

	<changeSet id="1" author="hhildebrand">
		<sql><![CDATA[
            CREATE TABLE ruleform.product_parent_sequencing_authorization
            (
              id bigserial NOT NULL, -- Unique identifier
              service bigint NOT NULL, -- The last service of a given protocol that was completed
              status_code bigint NOT NULL, -- The status of the last service completed
              sequence_number ruleform.sequence_number NOT NULL DEFAULT 1, -- Ordering and uniqueness, for when 
                                                                           -- a service / Status Code combination can trigger multiple job status changes
              parent bigint, -- If this is the current job's parent's product, then we should set the parent job's status.
                                -- If this is NULL, then it can apply to any parent job that has an product equal to the current job's
              parent_status_to_set bigint, -- The status to set for the parent job, provided it has an product equal to "my_parent"
              set_if_active_siblings boolean, -- Determines if we set the parent job to the status denoted by "parent_status_to_set" 
                                              -- if the current job has active sibling jobs.  Setting it to TRUE essentially overrides any say
                                              -- those sibling jobs might have.
              notes character varying, -- Additional notes regarding usage of this particular rule
              updated_by bigint NOT NULL, -- The agency that last updated this rule
              update_date timestamp with time zone NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, -- The date this rule was last changed
              CONSTRAINT product_parent_sequencing_authorization_pkey PRIMARY KEY (id ),
              CONSTRAINT product_parent_sequencing_authorization_my_parent_fkey FOREIGN KEY (parent)
                  REFERENCES ruleform.product (id) MATCH SIMPLE
                  ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY IMMEDIATE,
              CONSTRAINT product_parent_sequencing_authorization_parent_fkey FOREIGN KEY (service)
                  REFERENCES ruleform.product (id) MATCH SIMPLE
                  ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY IMMEDIATE,
              CONSTRAINT product_parent_sequencing_authorization_parent_status_to_set_fkey FOREIGN KEY (parent_status_to_set)
                  REFERENCES ruleform.status_code (id) MATCH SIMPLE
                  ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY IMMEDIATE,
              CONSTRAINT product_parent_sequencing_authorization_status_code_fkey FOREIGN KEY (status_code)
                  REFERENCES ruleform.status_code (id) MATCH SIMPLE
                  ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY IMMEDIATE,
              CONSTRAINT product_parent_sequencing_authorization_updated_by_fkey FOREIGN KEY (updated_by)
                  REFERENCES ruleform.agency (id) MATCH SIMPLE
                  ON UPDATE CASCADE ON DELETE RESTRICT DEFERRABLE INITIALLY IMMEDIATE,
              CONSTRAINT product_parent_sequencing_authorization_parent_status_code_sequ_key UNIQUE (service , status_code , sequence_number )
            )
            WITH (
              OIDS=FALSE
            );
            COMMENT ON TABLE ruleform.product_parent_sequencing_authorization
              IS 'Determines what the next available product should be, based on the status code returned for the previous product';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.id IS 'Unique identifier';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.service IS 'The last product of a given protocol that was completed';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.status_code IS 'The status of the last product completed';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.sequence_number IS 'Ordering and uniqueness, for when a product / Status Code combination can trigger multiple child products';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.notes IS 'Additional notes regarding usage of this particular rule';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.updated_by IS 'The agency that last updated this rule';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.update_date IS 'The date this rule was last changed';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.parent IS 'If this is the current job''s parent''s product, then we should set the parent job''s status.  If this is NULL, then it can apply to any parent job that has an product equal to the current job''s';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.parent_status_to_set IS 'The status to set for the parent job, provided it has an product equal to "my_parent"';
            COMMENT ON COLUMN ruleform.product_parent_sequencing_authorization.set_if_active_siblings IS 'Determines if we set the parent job to the status denoted by "parent_status_to_set" if the current job has active sibling jobs.  Setting it to TRUE essentially overrides any say those sibling jobs might have.';
            ]]>
		</sql>
		<rollback>
			<dropTable tableName="ruleform.product_parent_sequencing_authorization" />
		</rollback>
	</changeSet>
</databaseChangeLog>
