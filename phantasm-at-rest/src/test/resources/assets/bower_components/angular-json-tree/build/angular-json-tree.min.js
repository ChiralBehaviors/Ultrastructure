/*global angular */
!function(){"use strict";var e={is:function(e,n){return Object.prototype.toString.call(e).slice(8,-1)===n},whatClass:function(e){return Object.prototype.toString.call(e).slice(8,-1)},forKeys:function(e,n){for(var a in e)if(e.hasOwnProperty(a)&&"function"!=typeof e[a]&&n(a,e[a]))break}};angular.module("angular-json-tree",["ajs.RecursiveDirectiveHelper"]).directive("jsonTree",[function(){return{restrict:"E",scope:{object:"=",startExpanded:"&?"},template:'<json-node key="\'Object\'" value="object" start-expanded="startExpanded()"></json-node>'}}]).directive("jsonNode",["ajsRecursiveDirectiveHelper",function(n){return{restrict:"E",scope:{key:"=",value:"=",startExpanded:"&?"},compile:function(e){return n.compile(e,this)},template:' <span class="key" ng-click="toggleExpanded()">{{key}}</span>       <span class="leaf-value" ng-if="!isExpandable">{{value}}</span>       <span class="branch-preview" ng-if="isExpandable" ng-show="!isExpanded" ng-click="toggleExpanded()">{{preview}}</span>       <ul class="branch-value" ng-if="isExpandable && shouldRender" ng-show="isExpanded">           <li ng-repeat="(subkey,subval) in value">               <json-node key="subkey" value="subval"></json-node>           </li>       </ul>',pre:function(n,a){if(a.addClass(e.whatClass(n.value).toLowerCase()),e.is(n.value,"Object")||e.is(n.value,"Array")){n.isExpandable=!0,a.addClass("expandable");var s=e.is(n.value,"Array");n.preview=s?"[ ":"{ ",e.forKeys(n.value,function(e,a){n.preview+=s?a+", ":e+": "+a+", "}),n.preview=n.preview.substring(0,n.preview.length-(n.preview.length>2?2:0))+(s?" ]":" }"),n.startExpanded&&n.startExpanded()&&(n.shouldRender=!0,a.addClass("expanded")),n.isExpanded=n.startExpanded?n.startExpanded():!1,n.toggleExpanded=function(){n.isExpanded=!n.isExpanded,n.isExpanded?a.addClass("expanded"):a.removeClass("expanded"),n.shouldRender=!0}}else n.isExpandable=!1,a.addClass("not-expandable")}}}]),angular.module("ajs.RecursiveDirectiveHelper",[]).factory("ajsRecursiveDirectiveHelper",["$compile",function(e){return{compile:function(n,a){angular.isFunction(a)&&(a={post:a});var s,t=n.contents().remove();return{pre:a&&a.pre?a.pre:null,post:function(n,r){s||(s=e(t)),s(n,function(e){r.append(e)}),a&&a.post&&a.post.apply(null,arguments)}}}}}])}();