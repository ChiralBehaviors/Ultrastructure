/**
 * AUTOGENERATED! DO NOT EDIT BY HAND.
 * Generated by WorkspaceGenerator.java
 *
 * (C) Copyright 2014 Chiral Behaviors, LLC. All Rights Reserved
 *
 
 * This file is part of Ultrastructure.
 *
 *  Ultrastructure is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 *  ULtrastructure is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with Ultrastructure.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.chiralbehaviors.CoRE.workspace;

import static com.chiralbehaviors.CoRE.workspace.WorkspaceAuthorization.DOES_WORKSPACE_AUTH_EXIST;
import static com.chiralbehaviors.CoRE.workspace.WorkspaceAuthorization.GET_AUTHORIZATION;
import static com.chiralbehaviors.CoRE.workspace.WorkspaceAuthorization.GET_AUTHORIZATIONS_BY_TYPE;
import static com.chiralbehaviors.CoRE.workspace.WorkspaceAuthorization.GET_WORKSPACE;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.metamodel.SingularAttribute;

import com.chiralbehaviors.CoRE.Ruleform;
import com.chiralbehaviors.CoRE.agency.Agency;
import com.chiralbehaviors.CoRE.agency.AgencyAttribute;
import com.chiralbehaviors.CoRE.agency.AgencyAttributeAuthorization;
import com.chiralbehaviors.CoRE.agency.AgencyLocation;
import com.chiralbehaviors.CoRE.agency.AgencyLocationAttribute;
import com.chiralbehaviors.CoRE.agency.AgencyLocationAttributeAuthorization;
import com.chiralbehaviors.CoRE.agency.AgencyLocationAuthorization;
import com.chiralbehaviors.CoRE.agency.AgencyNetwork;
import com.chiralbehaviors.CoRE.agency.AgencyNetworkAttribute;
import com.chiralbehaviors.CoRE.agency.AgencyNetworkAuthorization;
import com.chiralbehaviors.CoRE.agency.AgencyProduct;
import com.chiralbehaviors.CoRE.agency.AgencyProductAttribute;
import com.chiralbehaviors.CoRE.agency.AgencyProductAttributeAuthorization;
import com.chiralbehaviors.CoRE.agency.AgencyProductAuthorization;
import com.chiralbehaviors.CoRE.attribute.Attribute;
import com.chiralbehaviors.CoRE.attribute.AttributeMetaAttribute;
import com.chiralbehaviors.CoRE.attribute.AttributeMetaAttributeAuthorization;
import com.chiralbehaviors.CoRE.attribute.AttributeNetwork;
import com.chiralbehaviors.CoRE.attribute.AttributeNetworkAttribute;
import com.chiralbehaviors.CoRE.attribute.AttributeNetworkAuthorization;
import com.chiralbehaviors.CoRE.attribute.unit.Unit;
import com.chiralbehaviors.CoRE.attribute.unit.UnitAttribute;
import com.chiralbehaviors.CoRE.attribute.unit.UnitAttributeAuthorization;
import com.chiralbehaviors.CoRE.attribute.unit.UnitNetwork;
import com.chiralbehaviors.CoRE.attribute.unit.UnitNetworkAttribute;
import com.chiralbehaviors.CoRE.attribute.unit.UnitNetworkAuthorization;
import com.chiralbehaviors.CoRE.job.Job;
import com.chiralbehaviors.CoRE.job.JobChronology;
import com.chiralbehaviors.CoRE.job.MetaProtocol;
import com.chiralbehaviors.CoRE.job.ProductChildSequencingAuthorization;
import com.chiralbehaviors.CoRE.job.ProductParentSequencingAuthorization;
import com.chiralbehaviors.CoRE.job.ProductSelfSequencingAuthorization;
import com.chiralbehaviors.CoRE.job.ProductSiblingSequencingAuthorization;
import com.chiralbehaviors.CoRE.job.Protocol;
import com.chiralbehaviors.CoRE.job.status.StatusCode;
import com.chiralbehaviors.CoRE.job.status.StatusCodeAttribute;
import com.chiralbehaviors.CoRE.job.status.StatusCodeAttributeAuthorization;
import com.chiralbehaviors.CoRE.job.status.StatusCodeNetwork;
import com.chiralbehaviors.CoRE.job.status.StatusCodeNetworkAttribute;
import com.chiralbehaviors.CoRE.job.status.StatusCodeNetworkAuthorization;
import com.chiralbehaviors.CoRE.job.status.StatusCodeSequencing;
import com.chiralbehaviors.CoRE.location.Location;
import com.chiralbehaviors.CoRE.location.LocationAttribute;
import com.chiralbehaviors.CoRE.location.LocationAttributeAuthorization;
import com.chiralbehaviors.CoRE.location.LocationNetwork;
import com.chiralbehaviors.CoRE.location.LocationNetworkAttribute;
import com.chiralbehaviors.CoRE.location.LocationNetworkAuthorization;
import com.chiralbehaviors.CoRE.network.NetworkInference;
import com.chiralbehaviors.CoRE.product.Product;
import com.chiralbehaviors.CoRE.product.ProductAttribute;
import com.chiralbehaviors.CoRE.product.ProductAttributeAuthorization;
import com.chiralbehaviors.CoRE.product.ProductLocation;
import com.chiralbehaviors.CoRE.product.ProductLocationAttribute;
import com.chiralbehaviors.CoRE.product.ProductLocationAttributeAuthorization;
import com.chiralbehaviors.CoRE.product.ProductLocationAuthorization;
import com.chiralbehaviors.CoRE.product.ProductNetwork;
import com.chiralbehaviors.CoRE.product.ProductNetworkAttribute;
import com.chiralbehaviors.CoRE.product.ProductNetworkAuthorization;
import com.chiralbehaviors.CoRE.product.ProductRelationship;
import com.chiralbehaviors.CoRE.product.ProductRelationshipAttribute;
import com.chiralbehaviors.CoRE.product.ProductRelationshipAttributeAuthorization;
import com.chiralbehaviors.CoRE.product.ProductRelationshipAuthorization;
import com.chiralbehaviors.CoRE.relationship.Relationship;
import com.chiralbehaviors.CoRE.relationship.RelationshipAttribute;
import com.chiralbehaviors.CoRE.relationship.RelationshipAttributeAuthorization;
import com.chiralbehaviors.CoRE.relationship.RelationshipNetwork;
import com.chiralbehaviors.CoRE.relationship.RelationshipNetworkAttribute;
import com.chiralbehaviors.CoRE.relationship.RelationshipNetworkAuthorization;
import com.chiralbehaviors.CoRE.security.AgencyAgencyGrouping;
import com.chiralbehaviors.CoRE.security.AgencyAttributeGrouping;
import com.chiralbehaviors.CoRE.security.AgencyIntervalGrouping;
import com.chiralbehaviors.CoRE.security.AgencyLocationGrouping;
import com.chiralbehaviors.CoRE.security.AgencyProductGrouping;
import com.chiralbehaviors.CoRE.security.AgencyRelationshipGrouping;
import com.chiralbehaviors.CoRE.security.AgencyStatusCodeGrouping;
import com.chiralbehaviors.CoRE.security.AgencyUnitGrouping;
import com.chiralbehaviors.CoRE.time.Interval;
import com.chiralbehaviors.CoRE.time.IntervalAttribute;
import com.chiralbehaviors.CoRE.time.IntervalAttributeAuthorization;
import com.chiralbehaviors.CoRE.time.IntervalNetwork;
import com.chiralbehaviors.CoRE.time.IntervalNetworkAttribute;
import com.chiralbehaviors.CoRE.time.IntervalNetworkAuthorization;
import com.fasterxml.jackson.annotation.JsonAutoDetect;
import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;

@NamedQueries({ @NamedQuery(name = GET_WORKSPACE, query = "SELECT auth FROM WorkspaceAuthorization auth WHERE auth.definingProduct = :product"),
                @NamedQuery(name = GET_AUTHORIZATION, query = "SELECT auth FROM WorkspaceAuthorization auth "
                                                              + "WHERE auth.definingProduct = :product "
                                                              + "AND auth.key = :key"),
                @NamedQuery(name = GET_AUTHORIZATIONS_BY_TYPE, query = "SELECT auth FROM WorkspaceAuthorization auth "
                                                                       + "WHERE auth.definingProduct = :product "
                                                                       + "AND auth.type= :type"),
                @NamedQuery(name = DOES_WORKSPACE_AUTH_EXIST, query = "SELECT COUNT(auth) FROM WorkspaceAuthorization auth "
                                                                      + "WHERE auth.id = :id") })
@Entity
@Table(name = "workspace_authorization", schema = "ruleform")
@JsonAutoDetect(fieldVisibility = Visibility.PUBLIC_ONLY)
public class WorkspaceAuthorization extends Ruleform {
    public static final String  AGENCY                                       = "Agency";
    public static final String  AGENCY_AGENCY_GROUPING                       = "AgencyAgencyGrouping";
    public static final String  AGENCY_ATTRIBUTE                             = "AgencyAttribute";
    public static final String  AGENCY_ATTRIBUTE_AUTHORIZATION               = "AgencyAttributeAuthorization";
    public static final String  AGENCY_ATTRIBUTE_GROUPING                    = "AgencyAttributeGrouping";
    public static final String  AGENCY_INTERVAL_GROUPING                     = "AgencyIntervalGrouping";
    public static final String  AGENCY_LOCATION                              = "AgencyLocation";
    public static final String  AGENCY_LOCATION_ATTRIBUTE                    = "AgencyLocationAttribute";
    public static final String  AGENCY_LOCATION_ATTRIBUTE_AUTHORIZATION      = "AgencyLocationAttributeAuthorization";
    public static final String  AGENCY_LOCATION_AUTHORIZATION                = "AgencyLocationAuthorization";
    public static final String  AGENCY_LOCATION_GROUPING                     = "AgencyLocationGrouping";
    public static final String  AGENCY_NETWORK                               = "AgencyNetwork";
    public static final String  AGENCY_NETWORK_ATTRIBUTE                     = "AgencyNetworkAttribute";
    public static final String  AGENCY_NETWORK_AUTHORIZATION                 = "AgencyNetworkAuthorization";
    public static final String  AGENCY_PRODUCT                               = "AgencyProduct";
    public static final String  AGENCY_PRODUCT_ATTRIBUTE                     = "AgencyProductAttribute";
    public static final String  AGENCY_PRODUCT_ATTRIBUTE_AUTHORIZATION       = "AgencyProductAttributeAuthorization";
    public static final String  AGENCY_PRODUCT_AUTHORIZATION                 = "AgencyProductAuthorization";
    public static final String  AGENCY_PRODUCT_GROUPING                      = "AgencyProductGrouping";
    public static final String  AGENCY_RELATIONSHIP_GROUPING                 = "AgencyRelationshipGrouping";
    public static final String  AGENCY_STATUS_CODE_GROUPING                  = "AgencyStatusCodeGrouping";
    public static final String  AGENCY_UNIT_GROUPING                         = "AgencyUnitGrouping";
    public static final String  ATTRIBUTE                                    = "Attribute";
    public static final String  ATTRIBUTE_META_ATTRIBUTE                     = "AttributeMetaAttribute";
    public static final String  ATTRIBUTE_META_ATTRIBUTE_AUTHORIZATION       = "AttributeMetaAttributeAuthorization";
    public static final String  ATTRIBUTE_NETWORK                            = "AttributeNetwork";
    public static final String  ATTRIBUTE_NETWORK_ATTRIBUTE                  = "AttributeNetworkAttribute";
    public static final String  ATTRIBUTE_NETWORK_AUTHORIZATION              = "AttributeNetworkAuthorization";
    public static final String  DOES_WORKSPACE_AUTH_EXIST                    = "workspaceAuthorization.doesAuthExist";
    public static final String  GET_AUTHORIZATION                            = "workspaceAuthorization.getAuthorization";
    public static final String  GET_AUTHORIZATIONS_BY_TYPE                   = "workspaceAuthorization.getAuthorizationByType";
    public static final String  GET_WORKSPACE                                = "workspaceAuthorization.getWorkspace";
    public static final String  INTERVAL                                     = "Interval";
    public static final String  INTERVAL_ATTRIBUTE                           = "IntervalAttribute";
    public static final String  INTERVAL_NETWORK                             = "IntervalNetwork";
    public static final String  INTERVAL_NETWORK_ATTRIBUTE                   = "IntervalNetworkAttribute";
    public static final String  INTERVAL_NETWORK_AUTHORIZATION               = "IntervalNetworkAuthorization";
    public static final String  JOB                                          = "Job";
    public static final String  JOB_CHRONOLOGY                               = "JobChronology";
    public static final String  LOCATION                                     = "Location";
    public static final String  LOCATION_ATTRIBUTE                           = "LocationAttribute";
    public static final String  LOCATION_ATTRIBUTE_AUTHORIZATION             = "LocationAttributeAuthorization";
    public static final String  LOCATION_NETWORK                             = "LocationNetwork";
    public static final String  LOCATION_NETWORK_ATTRIBUTE                   = "LocationNetworkAttribute";
    public static final String  LOCATION_NETWORK_AUTHORIZATION               = "LocationNetworkAuthorization";
    public static final String  META_PROTOCOL                                = "MetaProtocol";
    public static final String  NETWORK_INFERENCE                            = "NetworkInference";
    public static final String  PRODUCT                                      = "Product";
    public static final String  PRODUCT_ATTRIBUTE                            = "ProductAttribute";
    public static final String  PRODUCT_ATTRIBUTE_AUTHORIZATION              = "ProductAttributeAuthorization";
    public static final String  PRODUCT_CHILD_SEQUENCING_AUTHORIZATION       = "ProductChildSequencingAuthorization";
    public static final String  PRODUCT_LOCATION                             = "ProductLocation";
    public static final String  PRODUCT_LOCATION_ATTRIBUTE                   = "ProductLocationAttribute";
    public static final String  PRODUCT_LOCATION_ATTRIBUTE_AUTHORIZATION     = "ProductLocationAttributeAuthorization";
    public static final String  PRODUCT_LOCATION_AUTHORIZATION               = "ProductLocationAuthorization";
    public static final String  PRODUCT_NETWORK                              = "ProductNetwork";
    public static final String  PRODUCT_NETWORK_ATTRIBUTE                    = "ProductNetworkAttribute";
    public static final String  PRODUCT_NETWORK_AUTHORIZATION                = "ProductNetworkAuthorization";
    public static final String  PRODUCT_PARENT_SEQUENCING_AUTHORIZATION      = "ProductParentSequencingAuthorization";
    public static final String  PRODUCT_RELATIONSHIP                         = "ProductRelationship";
    public static final String  PRODUCT_RELATIONSHIP_ATTRIBUTE               = "ProductRelationshipAttribute";
    public static final String  PRODUCT_RELATIONSHIP_ATTRIBUTE_AUTHORIZATION = "ProductRelationshipAttributeAuthorization";
    public static final String  PRODUCT_RELATIONSHIP_AUTHORIZATION           = "ProductRelationshipAuthorization";
    public static final String  PRODUCT_SELF_SEQUENCING_AUTHORIZATION        = "ProductSelfSequencingAuthorization";
    public static final String  PRODUCT_SIBLING_SEQUENCING_AUTHORIZATION     = "ProductSiblingSequencingAuthorization";
    public static final String  PROTOCOL                                     = "Protocol";
    public static final String  RELATIONSHIP                                 = "Relationship";
    public static final String  RELATIONSHIP_ATTRIBUTE                       = "RelationshipAttribute";
    public static final String  RELATIONSHIP_ATTRIBUTE_AUTHORIZATION         = "RelationshipAttributeAuthorization";
    public static final String  RELATIONSHIP_NETWORK                         = "RelationshipNetwork";
    public static final String  RELATIONSHIP_NETWORK_ATTRIBUTE               = "RelationshipNetworkAttribute";
    public static final String  RELATIONSHIP_NETWORK_AUTHORIZATION           = "RelationshipNetworkAuthorization";
    public static final String  STATUS_CODE                                  = "StatusCode";
    public static final String  STATUS_CODE_ATTRIBUTE                        = "StatusCodeAttribute";
    public static final String  STATUS_CODE_ATTRIBUTE_AUTHORIZATION          = "StatusCodeAttributeAuthorization";
    public static final String  STATUS_CODE_NETWORK                          = "StatusCodeNetwork";
    public static final String  STATUS_CODE_NETWORK_ATTRIBUTE                = "StatusCodeNetworkAttribute";
    public static final String  STATUS_CODE_SEQUENCING                       = "StatusCodeSequencing";
    public static final String  STAUTUS_CODE_NETWORK_AUTHORIZATION           = "StatusCodeNetworkAuthorization";
    public static final String  UNIT                                         = "Unit";
    public static final String  UNIT_ATTRIBUTE                               = "UnitAttribute";
    public static final String  UNIT_ATTRIBUTE_AUTHORIZATION                 = "UnitAttributeAuthorization";
    public static final String  UNIT_NETWORK                                 = "UnitNetwork";
    public static final String  UNIT_NETWORK_ATTRIBUTE                       = "UnitNetworkAttribute";
    public static final String  UNIT_NETWORK_AUTHORIZATION                   = "UnitNetworkAuthorization";
    private static final String INTERVAL_ATTRIBUTE_AUTHORIZATION             = "IntervalAttributeAuthorization";

    private static final long serialVersionUID = 1L;

    public static String getWorkspaceAuthorizationColumnName(Class<?> ruleform) {
        StringBuilder builder = new StringBuilder();
        String simpleName = ruleform.getClass()
                                    .getSimpleName();
        builder.append(Character.toLowerCase(simpleName.charAt(0)));
        int i = 1;
        for (char c = simpleName.charAt(i); i < simpleName.length(); i++) {
            if (Character.isUpperCase(c)) {
                builder.append('_');
                builder.append(Character.toLowerCase(c));
            }
        }
        return builder.toString();
    }

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency")
    @JsonIgnore
    private Agency agency;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_agency_grouping")
    @JsonIgnore
    private AgencyAgencyGrouping agencyAgencyGrouping;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_attribute")
    @JsonIgnore
    private AgencyAttribute agencyAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_attribute_authorization")
    @JsonIgnore
    private AgencyAttributeAuthorization agencyAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_attribute_grouping")
    @JsonIgnore
    private AgencyAttributeGrouping agencyAttributeGrouping;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_interval_grouping")
    @JsonIgnore
    private AgencyIntervalGrouping agencyIntervalGrouping;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_location")
    @JsonIgnore
    private AgencyLocation agencyLocation;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_location_attribute")
    @JsonIgnore
    private AgencyLocationAttribute agencyLocationAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_location_attribute_authorization")
    @JsonIgnore
    private AgencyLocationAttributeAuthorization agencyLocationAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_location_authorization")
    @JsonIgnore
    private AgencyLocationAuthorization agencyLocationAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_location_grouping")
    @JsonIgnore
    private AgencyLocationGrouping agencyLocationGrouping;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_network")
    @JsonIgnore
    private AgencyNetwork agencyNetwork;

    @ManyToOne(cascade = { CascadeType.PERSIST,
                           CascadeType.DETACH }, fetch = FetchType.EAGER)
    @JoinColumn(name = "agency_network_attribute")
    @JsonIgnore
    private AgencyNetworkAttribute agencyNetworkAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_network_authorization")
    @JsonIgnore
    private AgencyNetworkAuthorization agencyNetworkAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_product")
    @JsonIgnore
    private AgencyProduct agencyProduct;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_product_attribute")
    @JsonIgnore
    private AgencyProductAttribute agencyProductAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_product_attribute_authorization")
    @JsonIgnore
    private AgencyProductAttributeAuthorization agencyProductAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_product_authorization")
    @JsonIgnore
    private AgencyProductAuthorization agencyProductAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_product_grouping")
    @JsonIgnore
    private AgencyProductGrouping agencyProductGrouping;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_relationship_grouping")
    @JsonIgnore
    private AgencyRelationshipGrouping agencyRelationshipGrouping;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_status_code_grouping")
    @JsonIgnore
    private AgencyStatusCodeGrouping agencyStatusCodeGrouping;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "agency_unit_grouping")
    @JsonIgnore
    private AgencyUnitGrouping agencyUnitGrouping;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "attribute")
    @JsonIgnore
    private Attribute attribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "attribute_meta_attribute")
    @JsonIgnore
    private AttributeMetaAttribute attributeMetaAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "attr_meta_attr_auth")
    @JsonIgnore
    private AttributeMetaAttributeAuthorization attributeMetaAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "attribute_network")
    @JsonIgnore
    private AttributeNetwork attributeNetwork;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "attribute_network_attribute")
    @JsonIgnore
    private AttributeNetworkAttribute attributeNetworkAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "attribute_network_authorization")
    @JsonIgnore
    private AttributeNetworkAuthorization attributeNetworkAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "defining_product")
    private Product definingProduct;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "interval")
    @JsonIgnore
    private Interval interval;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "interval_attribute")
    @JsonIgnore
    private IntervalAttribute intervalAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "interval_attribute_authorization")
    @JsonIgnore
    private IntervalAttributeAuthorization intervalAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "interval_network")
    @JsonIgnore
    private IntervalNetwork intervalNetwork;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "interval_network_attribute")
    @JsonIgnore
    private IntervalNetworkAttribute intervalNetworkAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "interval_network_authorization")
    @JsonIgnore
    private IntervalNetworkAuthorization intervalNetworkAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "job")
    @JsonIgnore
    private Job job;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "job_chronology")
    @JsonIgnore
    private JobChronology jobChronology;

    private String key;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "location")
    @JsonIgnore
    private Location location;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "location_attribute")
    @JsonIgnore
    private LocationAttribute locationAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "location_attribute_authorization")
    @JsonIgnore
    private LocationAttributeAuthorization locationAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "location_network")
    @JsonIgnore
    private LocationNetwork locationNetwork;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "location_network_attribute")
    @JsonIgnore
    private LocationNetworkAttribute locationNetworkAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "location_network_authorization")
    @JsonIgnore
    private LocationNetworkAuthorization locationNetworkAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "meta_protocol")
    @JsonIgnore
    private MetaProtocol metaProtocol;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "network_inference")
    @JsonIgnore
    private NetworkInference networkInference;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product")
    @JsonIgnore
    private Product product;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_attribute")
    @JsonIgnore
    private ProductAttribute productAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_attribute_authorization")
    @JsonIgnore
    private ProductAttributeAuthorization productAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_child_sequencing_authorization")
    @JsonIgnore
    private ProductChildSequencingAuthorization productChildSequencingAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_location")
    @JsonIgnore
    private ProductLocation productLocation;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_location_attribute")
    @JsonIgnore
    private ProductLocationAttribute productLocationAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_location_attribute_authorization")
    @JsonIgnore
    private ProductLocationAttributeAuthorization productLocationAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_location_authorization")
    @JsonIgnore
    private ProductLocationAuthorization productLocationAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_network")
    @JsonIgnore
    private ProductNetwork productNetwork;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_network_attribute")
    @JsonIgnore
    private ProductNetworkAttribute productNetworkAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_network_authorization")
    @JsonIgnore
    private ProductNetworkAuthorization productNetworkAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_parent_sequencing_authorization")
    @JsonIgnore
    private ProductParentSequencingAuthorization productParentSequencingAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_relationship")
    @JsonIgnore
    private ProductRelationship productRelationship;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_relationship_attribute")
    @JsonIgnore
    private ProductRelationshipAttribute productRelationshipAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_relationship_attribute_authorization")
    @JsonIgnore
    private ProductRelationshipAttributeAuthorization productRelationshipAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_relationship_authorization")
    @JsonIgnore
    private ProductRelationshipAuthorization productRelationshipAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_self_sequencing_authorization")
    @JsonIgnore
    private ProductSelfSequencingAuthorization productSelfSequencingAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "product_sibling_sequencing_authorization")
    @JsonIgnore
    private ProductSiblingSequencingAuthorization productSiblingSequencingAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "protocol")
    @JsonIgnore
    private Protocol protocol;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "relationship")
    @JsonIgnore
    private Relationship relationship;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "relationship_attribute")
    @JsonIgnore
    private RelationshipAttribute relationshipAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "relationship_attribute_authorization")
    @JsonIgnore
    private RelationshipAttributeAuthorization relationshipAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "relationship_network")
    @JsonIgnore
    private RelationshipNetwork relationshipNetwork;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "relationship_network_attribute")
    @JsonIgnore
    private RelationshipNetworkAttribute relationshipNetworkAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "relationship_network_authorization")
    @JsonIgnore
    private RelationshipNetworkAuthorization relationshipNetworkAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "status_code")
    @JsonIgnore
    private StatusCode statusCode;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "status_code_attribute")
    @JsonIgnore
    private StatusCodeAttribute statusCodeAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "status_code_attribute_authorization")
    @JsonIgnore
    private StatusCodeAttributeAuthorization statusCodeAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "status_code_network")
    @JsonIgnore
    private StatusCodeNetwork statusCodeNetwork;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "status_code_network_attribute")
    @JsonIgnore
    private StatusCodeNetworkAttribute statusCodeNetworkAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "status_code_network_authorization")
    @JsonIgnore
    private StatusCodeNetworkAuthorization statusCodeNetworkAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "status_code_sequencing")
    @JsonIgnore
    private StatusCodeSequencing statusCodeSequencing;

    @Column(name = "type")
    private String type;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "unit")
    @JsonIgnore
    private Unit unit;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "unit_attribute")
    @JsonIgnore
    private UnitAttribute unitAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "unit_attribute_authorization")
    @JsonIgnore
    private UnitAttributeAuthorization unitAttributeAuthorization;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "unit_network")
    @JsonIgnore
    private UnitNetwork unitNetwork;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "unit_network_attribute")
    @JsonIgnore
    private UnitNetworkAttribute unitNetworkAttribute;

    @ManyToOne(cascade = { CascadeType.PERSIST, CascadeType.DETACH })
    @JoinColumn(name = "unit_network_authorization")
    @JsonIgnore
    private UnitNetworkAuthorization unitNetworkAuthorization;

    public WorkspaceAuthorization() {
        super();
    }

    public WorkspaceAuthorization(Ruleform ruleform, Product definingProduct) {
        super();
        setRuleform(ruleform);
        setDefiningProduct(definingProduct);
    }

    public WorkspaceAuthorization(Ruleform ruleform, Product definingProduct,
                                  Agency updatedBy) {
        this(ruleform, definingProduct);
        setUpdatedBy(updatedBy);
    }

    public WorkspaceAuthorization(String key, Ruleform ruleform,
                                  Product definingProduct, Agency updatedBy) {
        this(ruleform, definingProduct, updatedBy);
        setKey(key);
    }

    @JsonGetter
    public Product getDefiningProduct() {
        return definingProduct;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public <T extends Ruleform> T getEntity() {
        switch (type) {
            case AGENCY:
                return (T) agency;
            case AGENCY_ATTRIBUTE:
                return (T) agencyAttribute;
            case AGENCY_ATTRIBUTE_AUTHORIZATION:
                return (T) agencyAttributeAuthorization;
            case AGENCY_LOCATION:
                return (T) agencyLocation;
            case AGENCY_AGENCY_GROUPING:
                return (T) agencyAgencyGrouping;
            case AGENCY_ATTRIBUTE_GROUPING:
                return (T) agencyAgencyGrouping;
            case AGENCY_INTERVAL_GROUPING:
                return (T) agencyIntervalGrouping;
            case AGENCY_LOCATION_GROUPING:
                return (T) agencyLocationGrouping;
            case AGENCY_PRODUCT_GROUPING:
                return (T) agencyProductGrouping;
            case AGENCY_RELATIONSHIP_GROUPING:
                return (T) agencyRelationshipGrouping;
            case AGENCY_STATUS_CODE_GROUPING:
                return (T) agencyStatusCodeGrouping;
            case AGENCY_UNIT_GROUPING:
                return (T) agencyUnitGrouping;
            case AGENCY_LOCATION_ATTRIBUTE:
                return (T) agencyLocationAttribute;
            case AGENCY_NETWORK:
                return (T) agencyNetwork;
            case AGENCY_NETWORK_ATTRIBUTE:
                return (T) agencyNetworkAttribute;
            case AGENCY_NETWORK_AUTHORIZATION:
                return (T) agencyNetworkAuthorization;
            case AGENCY_PRODUCT:
                return (T) agencyProduct;
            case AGENCY_PRODUCT_ATTRIBUTE:
                return (T) agencyProductAttribute;
            case ATTRIBUTE:
                return (T) attribute;
            case ATTRIBUTE_META_ATTRIBUTE:
                return (T) attributeMetaAttribute;
            case ATTRIBUTE_META_ATTRIBUTE_AUTHORIZATION:
                return (T) attributeMetaAttributeAuthorization;
            case ATTRIBUTE_NETWORK:
                return (T) attributeNetwork;
            case ATTRIBUTE_NETWORK_ATTRIBUTE:
                return (T) attributeNetworkAttribute;
            case UNIT:
                return (T) unit;
            case UNIT_ATTRIBUTE:
                return (T) unitAttribute;
            case UNIT_ATTRIBUTE_AUTHORIZATION:
                return (T) unitAttributeAuthorization;
            case UNIT_NETWORK:
                return (T) unitNetwork;
            case UNIT_NETWORK_ATTRIBUTE:
                return (T) unitNetworkAttribute;
            case LOCATION:
                return (T) location;
            case LOCATION_ATTRIBUTE:
                return (T) locationAttribute;
            case LOCATION_ATTRIBUTE_AUTHORIZATION:
                return (T) locationAttributeAuthorization;
            case LOCATION_NETWORK:
                return (T) locationNetwork;
            case LOCATION_NETWORK_ATTRIBUTE:
                return (T) locationNetworkAttribute;
            case LOCATION_NETWORK_AUTHORIZATION:
                return (T) locationNetworkAuthorization;
            case PRODUCT:
                return (T) product;
            case PRODUCT_ATTRIBUTE:
                return (T) productAttribute;
            case PRODUCT_ATTRIBUTE_AUTHORIZATION:
                return (T) productAttributeAuthorization;
            case PRODUCT_NETWORK:
                return (T) productNetwork;
            case PRODUCT_NETWORK_ATTRIBUTE:
                return (T) productNetworkAttribute;
            case PRODUCT_LOCATION:
                return (T) productLocation;
            case PRODUCT_LOCATION_ATTRIBUTE:
                return (T) productLocationAttribute;
            case PRODUCT_RELATIONSHIP:
                return (T) productRelationship;
            case PRODUCT_RELATIONSHIP_ATTRIBUTE:
                return (T) productRelationshipAttribute;
            case PRODUCT_RELATIONSHIP_ATTRIBUTE_AUTHORIZATION:
                return (T) productRelationshipAttributeAuthorization;
            case PRODUCT_RELATIONSHIP_AUTHORIZATION:
                return (T) productRelationshipAuthorization;
            case INTERVAL:
                return (T) interval;
            case INTERVAL_ATTRIBUTE:
                return (T) intervalAttribute;
            case INTERVAL_ATTRIBUTE_AUTHORIZATION:
                return (T) intervalAttributeAuthorization;
            case INTERVAL_NETWORK:
                return (T) intervalNetwork;
            case INTERVAL_NETWORK_ATTRIBUTE:
                return (T) intervalNetworkAttribute;
            case STATUS_CODE:
                return (T) statusCode;
            case STATUS_CODE_ATTRIBUTE:
                return (T) statusCodeAttribute;
            case STATUS_CODE_ATTRIBUTE_AUTHORIZATION:
                return (T) statusCodeAttributeAuthorization;
            case STATUS_CODE_NETWORK:
                return (T) statusCodeNetwork;
            case STATUS_CODE_NETWORK_ATTRIBUTE:
                return (T) statusCodeNetworkAttribute;
            case STATUS_CODE_SEQUENCING:
                return (T) statusCodeSequencing;
            case JOB:
                return (T) job;
            case JOB_CHRONOLOGY:
                return (T) jobChronology;
            case META_PROTOCOL:
                return (T) metaProtocol;
            case NETWORK_INFERENCE:
                return (T) networkInference;
            case PRODUCT_CHILD_SEQUENCING_AUTHORIZATION:
                return (T) productChildSequencingAuthorization;
            case PRODUCT_PARENT_SEQUENCING_AUTHORIZATION:
                return (T) productParentSequencingAuthorization;
            case PRODUCT_SELF_SEQUENCING_AUTHORIZATION:
                return (T) productSelfSequencingAuthorization;
            case PRODUCT_SIBLING_SEQUENCING_AUTHORIZATION:
                return (T) productSiblingSequencingAuthorization;
            case PROTOCOL:
                return (T) protocol;
            case RELATIONSHIP:
                return (T) relationship;
            case RELATIONSHIP_ATTRIBUTE:
                return (T) relationshipAttribute;
            case RELATIONSHIP_ATTRIBUTE_AUTHORIZATION:
                return (T) relationshipAttributeAuthorization;
            case RELATIONSHIP_NETWORK:
                return (T) relationshipNetwork;
            case RELATIONSHIP_NETWORK_ATTRIBUTE:
                return (T) relationshipNetworkAttribute;
            case ATTRIBUTE_NETWORK_AUTHORIZATION:
                return (T) attributeNetworkAuthorization;
            case INTERVAL_NETWORK_AUTHORIZATION:
                return (T) intervalNetworkAuthorization;
            case PRODUCT_NETWORK_AUTHORIZATION:
                return (T) productNetworkAuthorization;
            case RELATIONSHIP_NETWORK_AUTHORIZATION:
                return (T) relationshipNetworkAuthorization;
            case STAUTUS_CODE_NETWORK_AUTHORIZATION:
                return (T) statusCodeNetworkAuthorization;
            case UNIT_NETWORK_AUTHORIZATION:
                return (T) unitNetworkAuthorization;
            case AGENCY_LOCATION_ATTRIBUTE_AUTHORIZATION:
                return (T) agencyLocationAttributeAuthorization;
            case AGENCY_LOCATION_AUTHORIZATION:
                return (T) agencyLocationAuthorization;
            case AGENCY_PRODUCT_ATTRIBUTE_AUTHORIZATION:
                return (T) agencyProductAttributeAuthorization;
            case AGENCY_PRODUCT_AUTHORIZATION:
                return (T) agencyProductAuthorization;
            case PRODUCT_LOCATION_ATTRIBUTE_AUTHORIZATION:
                return (T) productLocationAttributeAuthorization;
            case PRODUCT_LOCATION_AUTHORIZATION:
                return (T) productLocationAuthorization;

            default:
                throw new IllegalStateException(String.format("Invalid type: %s",
                                                              type));
        }
    }

    public String getKey() {
        return key;
    }

    @JsonGetter
    public Ruleform getRuleform() {
        return getEntity();
    }

    public String getType() {
        return type;
    }

    /* (non-Javadoc)
     * @see com.chiralbehaviors.CoRE.Ruleform#getWorkspaceAuthAttribute()
     */
    @Override
    public SingularAttribute<WorkspaceAuthorization, ? extends Ruleform> getWorkspaceAuthAttribute() {
        throw new UnsupportedOperationException("Workspace auth does not recursively refer to workspace auth");
    }

    public void setDefiningProduct(Product definingProduct) {
        this.definingProduct = definingProduct;
    }

    public void setKey(String key) {
        this.key = key;
    }

    public void setRuleform(Ruleform ruleform) {
        switch (ruleform.getClass()
                        .getSimpleName()) {
            case AGENCY:
                setAgency((Agency) ruleform);
                break;
            case AGENCY_ATTRIBUTE:
                setAgencyAttribute((AgencyAttribute) ruleform);
                break;
            case AGENCY_ATTRIBUTE_AUTHORIZATION:
                setAgencyAttributeAuthorization((AgencyAttributeAuthorization) ruleform);
                break;
            case AGENCY_LOCATION:
                setAgencyLocation((AgencyLocation) ruleform);
                break;
            case AGENCY_AGENCY_GROUPING:
                setAgencyAgencyGrouping((AgencyAgencyGrouping) ruleform);
                break;
            case AGENCY_ATTRIBUTE_GROUPING:
                setAgencyAttributeGrouping((AgencyAttributeGrouping) ruleform);
                break;
            case AGENCY_INTERVAL_GROUPING:
                setAgencyIntervalGrouping((AgencyIntervalGrouping) ruleform);
                break;
            case AGENCY_LOCATION_GROUPING:
                setAgencyLocationGrouping((AgencyLocationGrouping) ruleform);
                break;
            case AGENCY_PRODUCT_GROUPING:
                setAgencyProductGrouping((AgencyProductGrouping) ruleform);
                break;
            case AGENCY_RELATIONSHIP_GROUPING:
                setAgencyRelationshipGrouping((AgencyRelationshipGrouping) ruleform);
                break;
            case AGENCY_STATUS_CODE_GROUPING:
                setAgencyStatusCodeGrouping((AgencyStatusCodeGrouping) ruleform);
                break;
            case AGENCY_UNIT_GROUPING:
                setAgencyUnitGrouping((AgencyUnitGrouping) ruleform);
                break;
            case AGENCY_LOCATION_ATTRIBUTE:
                setAgencyLocationAttribute((AgencyLocationAttribute) ruleform);
                break;
            case AGENCY_NETWORK:
                setAgencyNetwork((AgencyNetwork) ruleform);
                break;
            case AGENCY_NETWORK_ATTRIBUTE:
                setAgencyNetworkAttribute((AgencyNetworkAttribute) ruleform);
                break;
            case AGENCY_NETWORK_AUTHORIZATION:
                setAgencyNetworkAuthorization((AgencyNetworkAuthorization) ruleform);
                break;
            case AGENCY_PRODUCT:
                setAgencyProduct((AgencyProduct) ruleform);
                break;
            case AGENCY_PRODUCT_ATTRIBUTE:
                setAgencyProductAttribute((AgencyProductAttribute) ruleform);
                break;
            case ATTRIBUTE:
                setAttribute((Attribute) ruleform);
                break;
            case ATTRIBUTE_META_ATTRIBUTE:
                setAttributeMetaAttribute((AttributeMetaAttribute) ruleform);
                break;
            case ATTRIBUTE_META_ATTRIBUTE_AUTHORIZATION:
                setAttributeMetaAttributeAuthorization((AttributeMetaAttributeAuthorization) ruleform);
                break;
            case ATTRIBUTE_NETWORK:
                setAttributeNetwork((AttributeNetwork) ruleform);
                break;
            case ATTRIBUTE_NETWORK_ATTRIBUTE:
                setAttributeNetworkAttribute((AttributeNetworkAttribute) ruleform);
                break;
            case UNIT:
                setUnit((Unit) ruleform);
                break;
            case UNIT_ATTRIBUTE:
                setUnitAttribute((UnitAttribute) ruleform);
                break;
            case UNIT_ATTRIBUTE_AUTHORIZATION:
                setUnitAttributeAuthorization((UnitAttributeAuthorization) ruleform);
                break;
            case UNIT_NETWORK:
                setUnitNetwork((UnitNetwork) ruleform);
                break;
            case UNIT_NETWORK_ATTRIBUTE:
                setUnitNetworkAttribute((UnitNetworkAttribute) ruleform);
                break;
            case LOCATION:
                setLocation((Location) ruleform);
                break;
            case LOCATION_ATTRIBUTE:
                setLocationAttribute((LocationAttribute) ruleform);
                break;
            case LOCATION_ATTRIBUTE_AUTHORIZATION:
                setLocationAttributeAuthorization((LocationAttributeAuthorization) ruleform);
                break;
            case LOCATION_NETWORK:
                setLocationNetwork((LocationNetwork) ruleform);
                break;
            case LOCATION_NETWORK_ATTRIBUTE:
                setLocationNetworkAttribute((LocationNetworkAttribute) ruleform);
                break;
            case LOCATION_NETWORK_AUTHORIZATION:
                setLocationNetworkAuthorization((LocationNetworkAuthorization) ruleform);
                break;
            case PRODUCT:
                setProduct((Product) ruleform);
                break;
            case PRODUCT_ATTRIBUTE:
                setProductAttribute((ProductAttribute) ruleform);
                break;
            case PRODUCT_ATTRIBUTE_AUTHORIZATION:
                setProductAttributeAuthorization((ProductAttributeAuthorization) ruleform);
                break;
            case PRODUCT_NETWORK:
                setProductNetwork((ProductNetwork) ruleform);
                break;
            case PRODUCT_NETWORK_ATTRIBUTE:
                setProductNetworkAttribute((ProductNetworkAttribute) ruleform);
                break;
            case PRODUCT_LOCATION:
                setProductLocation((ProductLocation) ruleform);
                break;
            case PRODUCT_LOCATION_ATTRIBUTE:
                setProductLocationAttribute((ProductLocationAttribute) ruleform);
                break;
            case PRODUCT_RELATIONSHIP:
                setProductRelationship((ProductRelationship) ruleform);
                break;
            case PRODUCT_RELATIONSHIP_ATTRIBUTE:
                setProductRelationshipAttribute((ProductRelationshipAttribute) ruleform);
                break;
            case PRODUCT_RELATIONSHIP_ATTRIBUTE_AUTHORIZATION:
                setProductRelationshipAttributeAuthorization((ProductRelationshipAttributeAuthorization) ruleform);
                break;
            case PRODUCT_RELATIONSHIP_AUTHORIZATION:
                setProductRelationshipAuthorization((ProductRelationshipAuthorization) ruleform);
            case INTERVAL:
                setInterval((Interval) ruleform);
                break;
            case INTERVAL_ATTRIBUTE:
                setIntervalAttribute((IntervalAttribute) ruleform);
                break;
            case INTERVAL_ATTRIBUTE_AUTHORIZATION:
                setIntervalAttributeAuthorization((IntervalAttributeAuthorization) ruleform);
                break;
            case INTERVAL_NETWORK:
                setIntervalNetwork((IntervalNetwork) ruleform);
                break;
            case INTERVAL_NETWORK_ATTRIBUTE:
                setIntervalNetworkAttribute((IntervalNetworkAttribute) ruleform);
                break;
            case STATUS_CODE:
                setStatusCode((StatusCode) ruleform);
                break;
            case STATUS_CODE_ATTRIBUTE:
                setStatusCodeAttribute((StatusCodeAttribute) ruleform);
                break;
            case STATUS_CODE_ATTRIBUTE_AUTHORIZATION:
                setStatusCodeAttributeAuthorization((StatusCodeAttributeAuthorization) ruleform);
                break;
            case STATUS_CODE_NETWORK:
                setStatusCodeNetwork((StatusCodeNetwork) ruleform);
                break;
            case STATUS_CODE_NETWORK_ATTRIBUTE:
                setStatusCodeNetworkAttribute((StatusCodeNetworkAttribute) ruleform);
                break;
            case STATUS_CODE_SEQUENCING:
                setStatusCodeSequencing((StatusCodeSequencing) ruleform);
                break;
            case JOB:
                setJob((Job) ruleform);
                break;
            case JOB_CHRONOLOGY:
                setJobChronology((JobChronology) ruleform);
                break;
            case META_PROTOCOL:
                setMetaProtocol((MetaProtocol) ruleform);
                break;
            case NETWORK_INFERENCE:
                setNetworkInference((NetworkInference) ruleform);
                break;
            case PRODUCT_CHILD_SEQUENCING_AUTHORIZATION:
                setProductChildSequencingAuthorization((ProductChildSequencingAuthorization) ruleform);
                break;
            case PRODUCT_PARENT_SEQUENCING_AUTHORIZATION:
                setProductParentSequencingAuthorization((ProductParentSequencingAuthorization) ruleform);
                break;
            case PRODUCT_SELF_SEQUENCING_AUTHORIZATION:
                setProductSelfSequencingAuthorization((ProductSelfSequencingAuthorization) ruleform);
                break;
            case PRODUCT_SIBLING_SEQUENCING_AUTHORIZATION:
                setProductSiblingSequencingAuthorization((ProductSiblingSequencingAuthorization) ruleform);
                break;
            case PROTOCOL:
                setProtocol((Protocol) ruleform);
                break;
            case RELATIONSHIP:
                setRelationship((Relationship) ruleform);
                break;
            case RELATIONSHIP_ATTRIBUTE:
                setRelationshipAttribute((RelationshipAttribute) ruleform);
                break;
            case RELATIONSHIP_ATTRIBUTE_AUTHORIZATION:
                setRelationshipAttributeAuthorization((RelationshipAttributeAuthorization) ruleform);
                break;
            case RELATIONSHIP_NETWORK:
                setRelationshipNetwork((RelationshipNetwork) ruleform);
                break;
            case RELATIONSHIP_NETWORK_ATTRIBUTE:
                setRelationshipNetworkAttribute((RelationshipNetworkAttribute) ruleform);
                break;
            case ATTRIBUTE_NETWORK_AUTHORIZATION:
                setAttributeNetworkAuthorization((AttributeNetworkAuthorization) ruleform);
                break;
            case INTERVAL_NETWORK_AUTHORIZATION:
                setIntervalNetworkAuthorization((IntervalNetworkAuthorization) ruleform);
                break;
            case PRODUCT_NETWORK_AUTHORIZATION:
                setProductNetworkAuthorization((ProductNetworkAuthorization) ruleform);
                break;
            case RELATIONSHIP_NETWORK_AUTHORIZATION:
                setRelationshipNetworkAuthorization((RelationshipNetworkAuthorization) ruleform);
                break;
            case STAUTUS_CODE_NETWORK_AUTHORIZATION:
                setStatusCodeNetworkAuthorization((StatusCodeNetworkAuthorization) ruleform);
                break;
            case UNIT_NETWORK_AUTHORIZATION:
                setUnitNetworkAuthorization((UnitNetworkAuthorization) ruleform);
                break;
            case AGENCY_LOCATION_ATTRIBUTE_AUTHORIZATION:
                setAgencyLocationAttributeAuthorization((AgencyLocationAttributeAuthorization) ruleform);
                break;
            case AGENCY_LOCATION_AUTHORIZATION:
                setAgencyLocationAuthorization((AgencyLocationAuthorization) ruleform);
                break;
            case AGENCY_PRODUCT_ATTRIBUTE_AUTHORIZATION:
                setAgencyProductAttributeAuthorization((AgencyProductAttributeAuthorization) ruleform);
                break;
            case AGENCY_PRODUCT_AUTHORIZATION:
                setAgencyProductAuthorization((AgencyProductAuthorization) ruleform);
                break;
            case PRODUCT_LOCATION_ATTRIBUTE_AUTHORIZATION:
                setProductLocationAttributeAuthorization((ProductLocationAttributeAuthorization) ruleform);
                break;
            case PRODUCT_LOCATION_AUTHORIZATION:
                setProductLocationAuthorization((ProductLocationAuthorization) ruleform);
                break;

            default:
                throw new IllegalStateException(String.format("Invalid type: %s",
                                                              ruleform.getClass()
                                                                      .getSimpleName()));
        }
    }

    @Override
    public String toString() {
        return String.format("WorkspaceAuthorization [getRuleform()=%s]",
                             getRuleform());
    }

    private void setAgency(Agency agency) {
        type = AGENCY;
        this.agency = agency;
    }

    private void setAgencyAgencyGrouping(AgencyAgencyGrouping agencyAgencyGrouping) {
        type = AGENCY_AGENCY_GROUPING;
        this.agencyAgencyGrouping = agencyAgencyGrouping;
    }

    private void setAgencyAttribute(AgencyAttribute agencyAttribute) {
        type = AGENCY_ATTRIBUTE;
        this.agencyAttribute = agencyAttribute;
    }

    private void setAgencyAttributeAuthorization(AgencyAttributeAuthorization agencyAttributeAuthorization) {
        type = AGENCY_ATTRIBUTE_AUTHORIZATION;
        this.agencyAttributeAuthorization = agencyAttributeAuthorization;
    }

    private void setAgencyAttributeGrouping(AgencyAttributeGrouping agencyAttributeGrouping) {
        type = AGENCY_ATTRIBUTE_GROUPING;
        this.agencyAttributeGrouping = agencyAttributeGrouping;
    }

    private void setAgencyIntervalGrouping(AgencyIntervalGrouping agencyIntervalGrouping) {
        type = AGENCY_INTERVAL_GROUPING;
        this.agencyIntervalGrouping = agencyIntervalGrouping;
    }

    private void setAgencyLocation(AgencyLocation agencyLocation) {
        type = AGENCY_LOCATION;
        this.agencyLocation = agencyLocation;
    }

    private void setAgencyLocationAttribute(AgencyLocationAttribute agencyLocationAttribute) {
        type = AGENCY_LOCATION_ATTRIBUTE;
        this.agencyLocationAttribute = agencyLocationAttribute;
    }

    private void setAgencyLocationAttributeAuthorization(AgencyLocationAttributeAuthorization agencyLocationAttributeAuthorization) {
        type = AGENCY_LOCATION_ATTRIBUTE_AUTHORIZATION;
        this.agencyLocationAttributeAuthorization = agencyLocationAttributeAuthorization;
    }

    private void setAgencyLocationAuthorization(AgencyLocationAuthorization agencyLocationAuthorization) {
        type = AGENCY_LOCATION_AUTHORIZATION;
        this.agencyLocationAuthorization = agencyLocationAuthorization;
    }

    private void setAgencyLocationGrouping(AgencyLocationGrouping agencyLocationGrouping) {
        type = AGENCY_LOCATION_GROUPING;
        this.agencyLocationGrouping = agencyLocationGrouping;
    }

    private void setAgencyNetwork(AgencyNetwork agencyNetwork) {
        type = AGENCY_NETWORK;
        this.agencyNetwork = agencyNetwork;
    }

    private void setAgencyNetworkAttribute(AgencyNetworkAttribute agencyNetworkAttribute) {
        type = AGENCY_NETWORK_ATTRIBUTE;
        this.agencyNetworkAttribute = agencyNetworkAttribute;
    }

    private void setAgencyNetworkAuthorization(AgencyNetworkAuthorization agencyNetworkAuthorization) {
        type = AGENCY_NETWORK_AUTHORIZATION;
        this.agencyNetworkAuthorization = agencyNetworkAuthorization;
    }

    private void setAgencyProduct(AgencyProduct agencyProduct) {
        type = AGENCY_PRODUCT;
        this.agencyProduct = agencyProduct;
    }

    private void setAgencyProductAttribute(AgencyProductAttribute agencyProductAttribute) {
        type = AGENCY_PRODUCT_ATTRIBUTE;
        this.agencyProductAttribute = agencyProductAttribute;
    }

    private void setAgencyProductAttributeAuthorization(AgencyProductAttributeAuthorization agencyProductAttributeAuthorization) {
        type = AGENCY_PRODUCT_ATTRIBUTE_AUTHORIZATION;
        this.agencyProductAttributeAuthorization = agencyProductAttributeAuthorization;
    }

    private void setAgencyProductAuthorization(AgencyProductAuthorization agencyProductAuthorization) {
        type = AGENCY_PRODUCT_AUTHORIZATION;
        this.agencyProductAuthorization = agencyProductAuthorization;
    }

    private void setAgencyProductGrouping(AgencyProductGrouping agencyProductGrouping) {
        type = AGENCY_PRODUCT_GROUPING;
        this.agencyProductGrouping = agencyProductGrouping;
    }

    private void setAgencyRelationshipGrouping(AgencyRelationshipGrouping agencyRelationshipGrouping) {
        type = AGENCY_RELATIONSHIP_GROUPING;
        this.agencyRelationshipGrouping = agencyRelationshipGrouping;
    }

    private void setAgencyStatusCodeGrouping(AgencyStatusCodeGrouping agencyStatusCodeGrouping) {
        type = AGENCY_STATUS_CODE_GROUPING;
        this.agencyStatusCodeGrouping = agencyStatusCodeGrouping;
    }

    private void setAgencyUnitGrouping(AgencyUnitGrouping agencyUnitGrouping) {
        type = AGENCY_UNIT_GROUPING;
        this.agencyUnitGrouping = agencyUnitGrouping;
    }

    private void setAttribute(Attribute attribute) {
        type = ATTRIBUTE;
        this.attribute = attribute;
    }

    private void setAttributeMetaAttribute(AttributeMetaAttribute attributeMetaAttribute) {
        type = ATTRIBUTE_META_ATTRIBUTE;
        this.attributeMetaAttribute = attributeMetaAttribute;
    }

    private void setAttributeMetaAttributeAuthorization(AttributeMetaAttributeAuthorization attributeMetaAttributeAuthorization) {
        type = ATTRIBUTE_META_ATTRIBUTE_AUTHORIZATION;
        this.attributeMetaAttributeAuthorization = attributeMetaAttributeAuthorization;
    }

    private void setAttributeNetwork(AttributeNetwork attributeNetwork) {
        type = ATTRIBUTE_NETWORK;
        this.attributeNetwork = attributeNetwork;
    }

    private void setAttributeNetworkAttribute(AttributeNetworkAttribute attributeNetworkAttribute) {
        type = ATTRIBUTE_NETWORK_ATTRIBUTE;
        this.attributeNetworkAttribute = attributeNetworkAttribute;
    }

    private void setAttributeNetworkAuthorization(AttributeNetworkAuthorization attributeNetworkAuthorization) {
        type = ATTRIBUTE_NETWORK_AUTHORIZATION;
        this.attributeNetworkAuthorization = attributeNetworkAuthorization;
    }

    private void setInterval(Interval interval) {
        type = INTERVAL;
        this.interval = interval;
    }

    private void setIntervalAttribute(IntervalAttribute intervalAttribute) {
        type = INTERVAL_ATTRIBUTE;
        this.intervalAttribute = intervalAttribute;
    }

    private void setIntervalAttributeAuthorization(IntervalAttributeAuthorization intervalAttributeAuthorization) {
        type = INTERVAL_ATTRIBUTE_AUTHORIZATION;
        this.intervalAttributeAuthorization = intervalAttributeAuthorization;
    }

    private void setIntervalNetwork(IntervalNetwork intervalNetwork) {
        type = INTERVAL_NETWORK;
        this.intervalNetwork = intervalNetwork;
    }

    private void setIntervalNetworkAttribute(IntervalNetworkAttribute intervalNetworkAttribute) {
        type = INTERVAL_NETWORK_ATTRIBUTE;
        this.intervalNetworkAttribute = intervalNetworkAttribute;
    }

    private void setIntervalNetworkAuthorization(IntervalNetworkAuthorization intervalNetworkAuthorization) {
        type = INTERVAL_NETWORK_AUTHORIZATION;
        this.intervalNetworkAuthorization = intervalNetworkAuthorization;
    }

    private void setJob(Job job) {
        type = JOB;
        this.job = job;
    }

    private void setJobChronology(JobChronology jobChronology) {
        type = JOB_CHRONOLOGY;
        this.jobChronology = jobChronology;
    }

    private void setLocation(Location location) {
        type = LOCATION;
        this.location = location;
    }

    private void setLocationAttribute(LocationAttribute locationAttribute) {
        type = LOCATION_ATTRIBUTE;
        this.locationAttribute = locationAttribute;
    }

    private void setLocationAttributeAuthorization(LocationAttributeAuthorization locationAttributeAuthorization) {
        type = LOCATION_ATTRIBUTE_AUTHORIZATION;
        this.locationAttributeAuthorization = locationAttributeAuthorization;
    }

    private void setLocationNetwork(LocationNetwork locationNetwork) {
        type = LOCATION_NETWORK;
        this.locationNetwork = locationNetwork;
    }

    private void setLocationNetworkAttribute(LocationNetworkAttribute locationNetworkAttribute) {
        type = LOCATION_NETWORK_ATTRIBUTE;
        this.locationNetworkAttribute = locationNetworkAttribute;
    }

    private void setLocationNetworkAuthorization(LocationNetworkAuthorization locationNetworkAuthorization) {
        type = LOCATION_NETWORK_AUTHORIZATION;
        this.locationNetworkAuthorization = locationNetworkAuthorization;
    }

    private void setMetaProtocol(MetaProtocol metaProtocol) {
        type = META_PROTOCOL;
        this.metaProtocol = metaProtocol;
    }

    private void setNetworkInference(NetworkInference networkInference) {
        type = NETWORK_INFERENCE;
        this.networkInference = networkInference;
    }

    private void setProduct(Product product) {
        type = PRODUCT;
        this.product = product;
    }

    private void setProductAttribute(ProductAttribute productAttribute) {
        type = PRODUCT_ATTRIBUTE;
        this.productAttribute = productAttribute;
    }

    private void setProductAttributeAuthorization(ProductAttributeAuthorization productAttributeAuthorization) {
        type = PRODUCT_ATTRIBUTE_AUTHORIZATION;
        this.productAttributeAuthorization = productAttributeAuthorization;
    }

    private void setProductChildSequencingAuthorization(ProductChildSequencingAuthorization productChildSequencingAuthorization) {
        type = PRODUCT_CHILD_SEQUENCING_AUTHORIZATION;
        this.productChildSequencingAuthorization = productChildSequencingAuthorization;
    }

    private void setProductLocation(ProductLocation productLocation) {
        type = PRODUCT_LOCATION;
        this.productLocation = productLocation;
    }

    private void setProductLocationAttribute(ProductLocationAttribute productLocationAttribute) {
        type = PRODUCT_LOCATION_ATTRIBUTE;
        this.productLocationAttribute = productLocationAttribute;
    }

    private void setProductLocationAttributeAuthorization(ProductLocationAttributeAuthorization productLocationAttributeAuthorization) {
        type = PRODUCT_LOCATION_ATTRIBUTE_AUTHORIZATION;
        this.productLocationAttributeAuthorization = productLocationAttributeAuthorization;
    }

    private void setProductLocationAuthorization(ProductLocationAuthorization productLocationAuthorization) {
        type = PRODUCT_LOCATION_AUTHORIZATION;
        this.productLocationAuthorization = productLocationAuthorization;
    }

    private void setProductNetwork(ProductNetwork productNetwork) {
        type = PRODUCT_NETWORK;
        this.productNetwork = productNetwork;
    }

    private void setProductNetworkAttribute(ProductNetworkAttribute productNetworkAttribute) {
        type = PRODUCT_NETWORK_ATTRIBUTE;
        this.productNetworkAttribute = productNetworkAttribute;
    }

    private void setProductNetworkAuthorization(ProductNetworkAuthorization productNetworkAuthorization) {
        type = PRODUCT_NETWORK_AUTHORIZATION;
        this.productNetworkAuthorization = productNetworkAuthorization;
    }

    private void setProductParentSequencingAuthorization(ProductParentSequencingAuthorization productParentSequencingAuthorization) {
        type = PRODUCT_PARENT_SEQUENCING_AUTHORIZATION;
        this.productParentSequencingAuthorization = productParentSequencingAuthorization;
    }

    private void setProductRelationship(ProductRelationship entity) {
        type = PRODUCT_RELATIONSHIP;
        this.productRelationship = entity;
    }

    private void setProductRelationshipAttribute(ProductRelationshipAttribute entity) {
        type = PRODUCT_RELATIONSHIP_ATTRIBUTE;
        this.productRelationshipAttribute = entity;
    }

    private void setProductRelationshipAttributeAuthorization(ProductRelationshipAttributeAuthorization entity) {
        type = PRODUCT_RELATIONSHIP_ATTRIBUTE_AUTHORIZATION;
        this.productRelationshipAttributeAuthorization = entity;
    }

    private void setProductRelationshipAuthorization(ProductRelationshipAuthorization entity) {
        type = PRODUCT_RELATIONSHIP_AUTHORIZATION;
        this.productRelationshipAuthorization = entity;
    }

    private void setProductSelfSequencingAuthorization(ProductSelfSequencingAuthorization productSelfSequencingAuthorization) {
        type = PRODUCT_SELF_SEQUENCING_AUTHORIZATION;
        this.productSelfSequencingAuthorization = productSelfSequencingAuthorization;
    }

    private void setProductSiblingSequencingAuthorization(ProductSiblingSequencingAuthorization productSiblingSequencingAuthorization) {
        type = PRODUCT_SIBLING_SEQUENCING_AUTHORIZATION;
        this.productSiblingSequencingAuthorization = productSiblingSequencingAuthorization;
    }

    private void setProtocol(Protocol protocol) {
        type = PROTOCOL;
        this.protocol = protocol;
    }

    private void setRelationship(Relationship relationship) {
        type = RELATIONSHIP;
        this.relationship = relationship;
    }

    private void setRelationshipAttribute(RelationshipAttribute relationshipAttribute) {
        type = RELATIONSHIP_ATTRIBUTE;
        this.relationshipAttribute = relationshipAttribute;
    }

    private void setRelationshipAttributeAuthorization(RelationshipAttributeAuthorization relationshipAttributeAuthorization) {
        type = RELATIONSHIP_ATTRIBUTE_AUTHORIZATION;
        this.relationshipAttributeAuthorization = relationshipAttributeAuthorization;
    }

    private void setRelationshipNetwork(RelationshipNetwork relationshipNetwork) {
        type = RELATIONSHIP_NETWORK;
        this.relationshipNetwork = relationshipNetwork;
    }

    private void setRelationshipNetworkAttribute(RelationshipNetworkAttribute attribute) {
        type = RELATIONSHIP_NETWORK_ATTRIBUTE;
        this.relationshipNetworkAttribute = attribute;
    }

    private void setRelationshipNetworkAuthorization(RelationshipNetworkAuthorization relationshipNetworkAuthorization) {
        type = RELATIONSHIP_NETWORK_AUTHORIZATION;
        this.relationshipNetworkAuthorization = relationshipNetworkAuthorization;
    }

    private void setStatusCode(StatusCode statusCode) {
        type = STATUS_CODE;
        this.statusCode = statusCode;
    }

    private void setStatusCodeAttribute(StatusCodeAttribute statusCodeAttribute) {
        type = STATUS_CODE_ATTRIBUTE;
        this.statusCodeAttribute = statusCodeAttribute;
    }

    private void setStatusCodeAttributeAuthorization(StatusCodeAttributeAuthorization statusCodeAttributeAuthorization) {
        type = STATUS_CODE_ATTRIBUTE_AUTHORIZATION;
        this.statusCodeAttributeAuthorization = statusCodeAttributeAuthorization;
    }

    private void setStatusCodeNetwork(StatusCodeNetwork statusCodeNetwork) {
        type = STATUS_CODE_NETWORK;
        this.statusCodeNetwork = statusCodeNetwork;
    }

    private void setStatusCodeNetworkAttribute(StatusCodeNetworkAttribute statusCodeNetworkAttribute) {
        type = STATUS_CODE_NETWORK_ATTRIBUTE;
        this.statusCodeNetworkAttribute = statusCodeNetworkAttribute;
    }

    private void setStatusCodeNetworkAuthorization(StatusCodeNetworkAuthorization statusCodeNetworkAuthorization) {
        type = STAUTUS_CODE_NETWORK_AUTHORIZATION;
        this.statusCodeNetworkAuthorization = statusCodeNetworkAuthorization;
    }

    private void setStatusCodeSequencing(StatusCodeSequencing statusCodeSequencing) {
        type = STATUS_CODE_SEQUENCING;
        this.statusCodeSequencing = statusCodeSequencing;
    }

    private void setUnit(Unit unit) {
        type = UNIT;
        this.unit = unit;
    }

    private void setUnitAttribute(UnitAttribute unitAttribute) {
        type = UNIT_ATTRIBUTE;
        this.unitAttribute = unitAttribute;
    }

    private void setUnitAttributeAuthorization(UnitAttributeAuthorization unitAttributeAuthorization) {
        type = UNIT_ATTRIBUTE_AUTHORIZATION;
        this.unitAttributeAuthorization = unitAttributeAuthorization;
    }

    private void setUnitNetwork(UnitNetwork unitNetwork) {
        type = UNIT_NETWORK;
        this.unitNetwork = unitNetwork;
    }

    private void setUnitNetworkAttribute(UnitNetworkAttribute unitNetworkAttribute) {
        type = UNIT_NETWORK_ATTRIBUTE;
        this.unitNetworkAttribute = unitNetworkAttribute;
    }

    private void setUnitNetworkAuthorization(UnitNetworkAuthorization unitNetworkAuthorization) {
        type = UNIT_NETWORK_AUTHORIZATION;
        this.unitNetworkAuthorization = unitNetworkAuthorization;
    }
}
