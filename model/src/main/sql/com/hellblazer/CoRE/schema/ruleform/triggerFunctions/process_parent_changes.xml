<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
    
    <changeSet id="1" author="hhildebrand">
        <sql splitStatements="false"><![CDATA[
            CREATE OR REPLACE FUNCTION ruleform.process_parent_changes()
              RETURNS trigger AS
            $BODY$
            DECLARE
                _seq ruleform.service_sequencing_authorization%ROWTYPE;
                _parent ruleform.entity.id%TYPE;
            BEGIN
                RAISE NOTICE 'Processing parent of Job %', NEW.id;
                -- select parent actions ordered by sequence number
                FOR _seq IN SELECT seq.* FROM ruleform.service_sequencing_authorization AS seq
                WHERE (seq.parent, seq.status_code) = (NEW.event, NEW.status)
                  AND (seq.my_parent, seq.parent_status_to_set, seq.set_if_active_siblings) IS DISTINCT FROM (NULL, NULL, NULL)
                ORDER BY seq.my_parent -- NULLs go last
                LOOP
                    -- determine if there are active siblings
                    IF _seq.set_if_active_siblings
                        OR ( SELECT (count(*) = 0::BIGINT)
                            FROM ruleform.job
                            WHERE parent = NEW.parent
                              AND ruleform.is_job_active( id ) )
                    THEN
                        -- If the parent job has the specified event then, make the change
                        -- if the specified event is NULL then set it
                        SELECT event INTO _parent FROM ruleform.job WHERE id = NEW.parent;
            
                        IF ( _seq.my_parent IS NULL
                            OR
                            _parent = _seq.my_parent )
                        THEN
                            PERFORM ruleform.change_job_status_code( NEW.parent, _seq.parent_status_to_set, 'Automatically switching to ' || ruleform.status_code_name(_seq.parent_status_to_set) || ' via direct communication from child job ' || NEW.id);
                            EXIT; -- quit processing once we've set a status
                        END IF;
                    END IF;
                END LOOP;
            
                RETURN NEW;
            
            END;
            $BODY$
              LANGUAGE plpgsql VOLATILE
              COST 100;
            ALTER FUNCTION ruleform.process_parent_changes()
              OWNER TO core;
            ]]>
        </sql>
        <rollback> DROP FUNCTION ruleform.process_parent_changes(); </rollback>
    </changeSet>
</databaseChangeLog>
