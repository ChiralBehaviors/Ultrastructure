<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/ormorm_2_0.xsd" version="2.0"
>
    <entity name="AttributeNetwork" class="com.chiralbehaviors.CoRE.attribute.AttributeNetwork"> 
        <named-native-query name="attributeNetwork.inference">
            <query><![CDATA[
            INSERT INTO working_memory(parent, relationship, child, inferred_from, inference_rule, premise1, premise2)
                 SELECT
                      p1.parent as parent,
                      deduction.inference as relationship,
                      p2.child as child,
                      ?1 as inferred_from,
                      deduction.id as inference_rule,
                      p1.id as premise1,
                      p2.id as premise2
                 FROM  (SELECT n.id, n.parent, n.relationship, n.child
                            FROM ruleform.attribute_network AS n) as p1
                 JOIN  (SELECT n.id, n.parent, n.relationship, n.child
                            FROM ruleform.attribute_network AS n
                            WHERE n.inferred_from = 1) as p2
                    ON p2.parent = p1.child
                    AND p2.child <> p1.parent
                 JOIN ruleform.network_inference AS deduction
                    ON p1.relationship = deduction.premise1
                    AND p2.relationship = deduction.premise2
            ]]></query>
        </named-native-query>
        <named-native-query name="attributeNetwork.inferenceStepFromLastPass">
            <query><![CDATA[
            INSERT INTO working_memory(parent, relationship, child, inferred_from, inference_rule, premise1, premise2)
                SELECT
                    p1.parent as parent,
                    deduction.inference as relationship,
                    p2.child as child,
                    ? as inferred_from,
                    deduction.id as inference_rule,
                    p1.id as premise1,
                    p2.id as premise2
                FROM (SELECT n.id, n.parent, n.relationship, n.child
                        FROM last_pass_rules AS n) as p1
                JOIN (SELECT n.id, n.parent, n.relationship, n.child
                        FROM ruleform.attribute_network AS n
                        WHERE n.inferred_from = 1) as p2
                    ON p2.parent = p1.child
                    AND p2.child <> p1.parent
                JOIN ruleform.network_inference AS deduction
                    ON p1.relationship = deduction.premise1
                    AND p2.relationship = deduction.premise2
            ]]></query>
        </named-native-query>
        <named-native-query name="attributeNetwork.deduceNewNetworkRules">
            <query><![CDATA[
            INSERT INTO current_pass_rules(id, 
                                           parent, 
                                           relationship, 
                                           child, 
                                           inferred_from, 
                                           inference_rule, 
                                           premise1, 
                                           premise2)
                SELECT nextval('ruleform.attribute_network_id_seq') as id, 
                       wm.parent as parent, 
                       wm.relationship as relationship, 
                       wm.child as child, 
                       wm.inferred_from as inferred_from, 
                       wm.inference_rule as inference_rule, 
                       wm.premise1 as premise1, 
                       wm.premise2 as premise2
                FROM (SELECT parent, relationship, child, inferred_from, inference_rule, premise1, premise2
                      FROM working_memory 
                      GROUP BY parent, relationship, child, inferred_from, inference_rule, premise1, premise2) AS wm
                LEFT OUTER JOIN ruleform.attribute_network AS exist
                     ON wm.parent = exist.parent
                     AND wm.relationship = exist.relationship
                     AND wm.child = exist.child
                     AND wm.inferred_from = exist.inferred_from
                     AND wm.inference_rule = exist.inference_rule
                     AND wm.premise1 = exist.premise1
                     AND wm.premise2 = exist.premise2
                WHERE exist.parent IS NULL
                 AND exist.relationship IS NULL
                 AND exist.child IS NULL
                 AND exist.inferred_from IS NULL
                 AND exist.inference_rule IS NULL
                 AND exist.premise1 IS NULL
                 AND exist.premise2 IS NULL
            ]]></query>
        </named-native-query>
        <named-native-query name="attributeNetwork.insertNewNetworkRules">
            <query><![CDATA[
           INSERT INTO ruleform.attribute_network(id, 
                                               parent, 
                                               relationship, 
                                               child, 
                                               inferred_from, 
                                               inference_rule, 
                                               premise1, 
                                               premise2, 
                                               updated_by)
               SELECT cpr.id as id,
                      cpr.parent as parent, 
                      cpr.relationship as relationship, 
                      cpr.child as child, 
                      cpr.inferred_from as inferred_from, 
                      cpr.inference_rule as inference_rule, 
                      cpr.premise1 as premise1, 
                      cpr.premise2 as premise2,
                      ?1 as updated_by
               FROM current_pass_rules cpr
            ]]></query>
        </named-native-query>
        <named-native-query name="attributeNetwork.generateInverses">
            <query><![CDATA[
            INSERT INTO ruleform.attribute_network(parent, relationship, child, inferred_from, inference_rule, premise1, premise2, updated_by)
            SELECT net.child as parent,
                   rel.inverse as relationship,
                   net.parent as child,
                   net.inferred_from as inferred_from,
                   net.inference_rule as inference_rule,
                   net.premise1 as premise1,
                   net.premise2 as premise2,
                   ?1 as updated_by
            FROM ruleform.attribute_network AS net
            JOIN ruleform.relationship AS rel ON net.relationship = rel.id
            LEFT OUTER JOIN ruleform.attribute_network AS exist
                ON net.child = exist.parent
                AND rel.inverse = exist.relationship
                AND net.parent = exist.child
                AND net.inferred_from = exist.inferred_from
                AND net.inference_rule = exist.inference_rule
                AND net.premise1 = exist.premise1
                AND net.premise2 = exist.premise2
            WHERE exist.parent IS NULL
              AND exist.relationship IS NULL
              AND exist.child IS NULL
              AND exist.inferred_from is NULL
              AND exist.inference_rule is NULL
              AND exist.premise1 is NULL
              AND exist.premise2 is NULL
            ]]></query>
        </named-native-query>
    </entity>
</entity-mappings>